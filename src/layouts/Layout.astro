---
import '../styles/global.css';
import '../styles/animations.css';
import ParticlesBackground from '../components/ParticlesBackground.astro';

export interface Props {
	title: string;
	description?: string;
}

const { title, description = "Portafolio de Erick Vergara, Desarrollador Full Stack con experiencia en React, Angular, .NET Core, y Python. Enfocado en soluciones escalables y optimizaci√≥n de rendimiento." } = Astro.props;
---

<!doctype html>
<html lang="es" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<!-- SEO & Metadata -->
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta name="keywords" content="Erick Vergara, Desarrollador Full Stack, React Developer, .NET Developer, Python Developer, Portafolio, Full Stack Developer" />
		<meta name="author" content="Erick Andres Vergara Noriega" />
		<link rel="canonical" href="https://erickvergara.dev" />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://erickvergara.dev/" />
		<meta property="og:title" content="Erick Vergara - Desarrollador Full Stack | Portafolio" />
		<meta property="og:description" content="Desarrollador Full Stack apasionado por resolver problemas complejos y construir software de alto impacto." />
		<meta property="og:image" content="https://placehold.co/1200x630/0D0D12/F8F8FF?text=EV" />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content="https://erickvergara.dev/" />
		<meta property="twitter:title" content="Erick Vergara - Desarrollador Full Stack | Portafolio" />
		<meta property="twitter:description" content="Portafolio de Erick Vergara, Desarrollador Full Stack con experiencia en React, Angular, .NET Core, y Python." />
		<meta property="twitter:image" content="https://placehold.co/1200x630/0D0D12/F8F8FF?text=EV" />

		<!-- Favicon -->
		<link rel="icon" href="https://placehold.co/32x32/7F5AF0/FFFFFF?text=EV" type="image/png" />

		<!-- Google Fonts Preconnect -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;700&display=swap" rel="stylesheet" media="print" onload="this.media='all'" />
		<noscript>
			<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;700&display=swap" rel="stylesheet" />
		</noscript>

		<!-- Import animations -->
		<!-- <link rel="stylesheet" href="/src/styles/animations.css" /> -->

		<meta name="generator" content={Astro.generator} />
	</head>
	<body class="bg-background text-primary-text font-sans antialiased">
		<!-- Accessibility Skip Link -->
		<a href="#main" class="sr-only focus:not-sr-only focus:absolute focus:z-50 focus:m-3 focus:rounded-lg focus:bg-accent focus:px-4 focus:py-3">
			Saltar al contenido principal
		</a>

		<ParticlesBackground />

		<div class="relative z-10">
			<slot />
		</div>

		<script>
			// --- Mobile Menu ---
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const closeMenuButton = document.getElementById('close-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');
			const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');

			const openMenu = () => mobileMenu?.classList.remove('hidden');
			const closeMenu = () => mobileMenu?.classList.add('hidden');

			mobileMenuButton?.addEventListener('click', openMenu);
			closeMenuButton?.addEventListener('click', closeMenu);
			mobileNavLinks.forEach(link => link.addEventListener('click', closeMenu));

			// --- Header Shadow on Scroll ---
			const header = document.getElementById('header');
			if (header) {
				window.addEventListener('scroll', () => {
					if (window.scrollY > 10) {
						header.classList.add('shadow-lg', 'shadow-accent/5');
					} else {
						header.classList.remove('shadow-lg', 'shadow-accent/5');
					}
				});
			}

			// --- Fade-in sections on scroll ---
			const sections = document.querySelectorAll('.fade-in-section');
			const observer = new IntersectionObserver((entries) => {
				entries.forEach(entry => {
					if (entry.isIntersecting) {
						entry.target.classList.add('is-visible');
					}
				});
			}, { threshold: 0.1 });

			sections.forEach(section => {
				observer.observe(section);
			});
		</script>
	</body>
</html>
